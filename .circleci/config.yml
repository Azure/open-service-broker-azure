version: 2
jobs:
  lint:
    docker:
      - image: krancour/gometalinter:canary
    environment:
      SKIP_DOCKER: true
      CGO_ENABLED: 0
    working_directory: /go/src/github.com/Azure/open-service-broker-azure
    steps:
      - checkout
      - run:
          name: Run Lint
          command: make lint
  verify-vendored-code:
    docker:
      - image: quay.io/deis/lightweight-docker-go:v0.2.0
    environment:
      SKIP_DOCKER: true
      CGO_ENABLED: 0
    working_directory: /go/src/github.com/Azure/open-service-broker-azure
    steps:
      - checkout
      - run:
          name: Verify Vendored Code
          command: make verify-vendored-code
  test-unit:
    docker:
      - image: quay.io/deis/lightweight-docker-go:v0.2.0
      - image: redis:3.2.4
    environment:
      SKIP_DOCKER: true
      STORAGE_REDIS_HOST: localhost
      ASYNC_REDIS_HOST: localhost
      CGO_ENABLED: 0
    working_directory: /go/src/github.com/Azure/open-service-broker-azure
    steps:
      - checkout
      - run:
          name: Run Unit Tests
          command: make test-unit
  test-api-compliance:
    machine: true
    steps:
      - checkout
      - run:
          name: Run API Compliance Tests
          command: make test-api-compliance
  build:
    docker:
      - image: docker:18.03.0-dind
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install Make & Git
          command: |
            apk update
            apk add make git
      - run:
          name: Build Binary & Docker Image
          command: make build
  test-service-lifecycles:
    docker:
      - image: quay.io/deis/lightweight-docker-go:v0.2.0
    environment:
      SKIP_DOCKER: true
      CGO_ENABLED: 0
    working_directory: /go/src/github.com/Azure/open-service-broker-azure
    steps:
      - checkout
      - run:
          name: Run Service Lifecycle Tests
          command: make test-service-lifecycles
  publish-rc-images:
    docker:
      - image: docker:18.03.0-dind
    environment:
      DOCKER_REPO: microsoft/
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install Make & Git
          command: |
            apk update
            apk add make git
      - run:
          name: Log in to Docker Hub
          command: docker login -u "${DOCKER_HUB_USERNAME}" -p "${DOCKER_HUB_PASSWORD}"
      - run:
          name: Publish Release Candidate Images to Docker Hub
          command: make push-rc
  publish-release-images:
    docker:
      - image: docker:18.03.0-dind
    environment:
      DOCKER_REPO: microsoft/
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install Make & Git
          command: |
            apk update
            apk add make git
      - run:
          name: Log in to Docker Hub
          command: docker login -u "${DOCKER_HUB_USERNAME}" -p "${DOCKER_HUB_PASSWORD}"
      - run:
          name: Publish Release Images to Docker Hub
          command: REL_VERSION="${CIRCLE_TAG}" make push-release
workflows:
  version: 2
  build-and-test-pr:
    jobs:
      - hold:
          type: approval
          filters:
            branches:
              ignore: master
      - lint:
          requires:
            - hold
          filters:
            branches:
              ignore: master
      - verify-vendored-code:
          requires:
            - hold
          filters:
            branches:
              ignore: master
      - test-unit:
          requires:
            - hold
          filters:
            branches:
              ignore: master
      # - test-api-compliance:
      #     requires:
      #       - hold
      #     filters:
      #       branches:
      #         ignore: master
      - build:
          requires:
            - hold
          filters:
            branches:
              ignore: master
      # - test-service-lifecycles:
      #     requires:
      #       - hold
      #       - lint
      #       - verify-vendored-code
      #       - test-unit
      #       # - test-api-compliance
      #       - build
      #     filters:
      #       branches:
      #         ignore: master
  build-and-test-master:
    jobs:
      - lint:
          filters:
            branches:
              only: master
      - verify-vendored-code:
          filters:
            branches:
              only: master
      - test-unit:
          filters:
            branches:
              only: master
      # - test-api-compliance:
      #     filters:
      #       branches:
      #         only: master
      - build:
          filters:
            branches:
              only: master
      - test-service-lifecycles:
          requires:
            - lint
            - verify-vendored-code
            - test-unit
            # - test-api-compliance
            - build
          filters:
            branches:
              only: master
      - publish-rc-images:
          requires:
            - lint
            - verify-vendored-code
            - test-unit
            # - test-api-compliance
            - build
            - test-service-lifecycles
          filters:
            branches:
              only: master
  release:
    jobs:
      - publish-release-images:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*(\-.+)?/
