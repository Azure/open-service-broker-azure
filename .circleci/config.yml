version: 2

go-image: &go-image quay.io/deis/lightweight-docker-go:v0.2.0
docker-image: &docker-image docker:18.03.0-dind
chart-image: &chart-image quay.io/deis/helm-chart-publishing-tools:v0.1.0
redis-image: &redis-image redis:3.2.4

base-go-job: &base-go-job
  docker:
    - image: *go-image
  environment: &base-go-environment
    SKIP_DOCKER: true
    CGO_ENABLED: 0
  working_directory: /go/src/github.com/Azure/open-service-broker-azure

base-docker-job: &base-docker-job
  docker:
    - image: *docker-image
install-make-and-git-step: &install-make-and-git-step
  name: Install Make & Git
  command: |
    apk update
    apk add make git
log-into-docker-hub-step: &log-into-docker-hub-step
  name: Log into Docker Hub
  command: docker login -u "${DOCKER_HUB_USERNAME}" -p "${DOCKER_HUB_PASSWORD}"

jobs:
  lint:
    <<: *base-go-job
    steps:
      - checkout
      # This is a workaround for a problem I (krancour) cannot pin down. The
      # linter works flawlessly in all environments (containers included)
      # EXCEPT a container in Circle. I've remoted into running containers in
      # Circle and have attempted, at great length, to diagnose the issue, but
      # am unable to do so. What I did discover, however, was that by
      # re-installing gometalinter (and the linters it, in turn, uses), I can
      # make the problem go away. ODDLY, when comparing the binaries that were
      # included in the image to the NEW binaries, diff says they are identical.
      # I'm at a complete loss for why this happens. I can live with this
      # workaround for now because I anticipate our days using Circle for CI
      # are numbered anyhow.
      - run:
          name: Re-Install Gometalinter
          command: |
            rm /go/bin/*
            cd /go/src/github.com/alecthomas/gometalinter
            go clean -i
            go install
            gometalinter --install
      - run:
          name: Lint Go Code
          command: make lint
  lint-chart:
    docker:
      - image: *chart-image
    environment:
      SKIP_DOCKER: true
    working_directory: /go/src/github.com/Azure/open-service-broker-azure
    steps:
      - checkout
      - run:
          name: Run Lint Helm Chart
          command: make lint-chart
  verify-vendored-code:
    <<: *base-go-job
    steps:
      - checkout
      - run:
          name: Verify Vendored Code
          command: make verify-vendored-code
  test-unit:
    <<: *base-go-job
    docker:
      - image: *go-image
      - image: *redis-image
    environment:
      <<: *base-go-environment
      STORAGE_REDIS_HOST: localhost
      ASYNC_REDIS_HOST: localhost
    steps:
      - checkout
      - run:
          name: Run Unit Tests
          command: make test-unit
  test-api-compliance:
    <<: *base-go-job
    environment:
      <<: *base-go-environment
      TESTS_PATH: /opt/osb-checker/2.13/tests
    steps:
      - checkout
      # This is a workaround. See comments in the script.
      - run:
          name: Copy Modified Test Scripts
          command: |
            mkdir -p /app
            cp tests/api-compliance/scripts/* /app/
      - run:
          name: Run API Compliance Tests
          command: |
            go run cmd/compliance-test-broker/compliance-test-broker.go &
            make test-api-compliance
  build:
    <<: *base-docker-job
    steps:
      - checkout
      - setup_remote_docker
      - run:
          <<: *install-make-and-git-step
      - run:
          name: Build Binary & Docker Image
          command: make build
  test-generate-pcf-tile:
    docker:
      - image: cfplatformeng/tile-generator:v11.0.4
    environment:
      SKIP_DOCKER: true
    working_directory: /workspace
    steps:
      - checkout
      - run:
          name: Install Make & Git
          command: |
            apk update
            apk add make git
      - run:
          name: Generate PCF Tile
          command: make generate-pcf-tile
  generate-pcf-tile:
    docker:
      - image: cfplatformeng/tile-generator:v11.0.4
    environment:
      SKIP_DOCKER: true
    working_directory: /workspace
    steps:
      - checkout
      - run:
          name: Install Make & Git
          command: |
            apk update
            apk add make git
      - run:
          name: Generate PCF Tile
          command: REL_VERSION="${CIRCLE_TAG}" make generate-pcf-tile
  test-service-lifecycles:
    <<: *base-go-job
    steps:
      - checkout
      - run:
          name: Run Service Lifecycle Tests
          command: make test-service-lifecycles
  publish-rc-images:
    <<: *base-docker-job
    environment:
      DOCKER_REPO: microsoft/
    steps:
      - checkout
      - setup_remote_docker
      - run:
          <<: *install-make-and-git-step
      - run:
          <<: *log-into-docker-hub-step
      - run:
          name: Publish Release Candidate Images to Docker Hub
          command: make push-rc
  publish-release-images:
    <<: *base-docker-job
    environment:
      DOCKER_REPO: microsoft/
    steps:
      - checkout
      - setup_remote_docker
      - run:
          <<: *install-make-and-git-step
      - run:
          <<: *log-into-docker-hub-step
      - run:
          name: Publish Release Images to Docker Hub
          command: REL_VERSION="${CIRCLE_TAG}" make push-release
  publish-rc-chart:
    docker:
      - image: *chart-image
    environment:
      SKIP_DOCKER: true
    working_directory: /go/src/github.com/Azure/open-service-broker-azure
    steps:
      - checkout
      - run:
          name: Publish Helm Chart
          command: make publish-rc-chart
  publish-release-chart:
    docker:
      - image: *chart-image
    environment:
      SKIP_DOCKER: true
    working_directory: /go/src/github.com/Azure/open-service-broker-azure
    steps:
      - checkout
      - run:
          name: Publish Helm Chart
          command: REL_VERSION="${CIRCLE_TAG}" make publish-release-chart

base-pr-step: &base-pr-step
  filters:
    branches:
      ignore: master

base-master-step: &base-master-step
  filters:
    branches:
      only: master

base-release-step: &base-release-step
  filters:
    branches:
      ignore: /.*/
    tags:
      only: /v[0-9]+(\.[0-9]+)*(\-.+)?/

workflows:
  version: 2
  build-and-test-pr:
    jobs:
      - hold:
          <<: *base-pr-step
          type: approval
      - lint:
          <<: *base-pr-step
          requires:
            - hold
      - lint-chart:
          <<: *base-pr-step
          requires:
            - hold
      - verify-vendored-code:
          <<: *base-pr-step
          requires:
            - hold
      - test-unit:
          <<: *base-pr-step
          requires:
            - hold
      - test-api-compliance:
          <<: *base-pr-step
          requires:
            - hold
      - build:
          <<: *base-pr-step
          requires:
            - hold
      - test-generate-pcf-tile:
          <<: *base-pr-step
          requires:
            - hold
      - test-service-lifecycles:
          <<: *base-pr-step
          requires:
            - hold
            - lint
            - lint-chart
            - verify-vendored-code
            - test-unit
            - test-api-compliance
            - build
            - test-generate-pcf-tile
  build-and-test-master:
    jobs:
      - lint:
          <<: *base-master-step
      - lint-chart:
          <<: *base-master-step
      - verify-vendored-code:
          <<: *base-master-step
      - test-unit:
          <<: *base-master-step
      - test-api-compliance:
          <<: *base-master-step
      - build:
          <<: *base-master-step
      - test-generate-pcf-tile:
          <<: *base-master-step
      - test-service-lifecycles:
          <<: *base-master-step
          requires:
            - lint
            - lint-chart
            - verify-vendored-code
            - test-unit
            - test-api-compliance
            - build
            - test-generate-pcf-tile
      - publish-rc-images:
          <<: *base-master-step
          requires:
            - lint
            - lint-chart
            - verify-vendored-code
            - test-unit
            - test-api-compliance
            - build
            - test-generate-pcf-tile
            - test-service-lifecycles
      - publish-rc-chart:
          <<: *base-master-step
          requires:
            - lint
            - lint-chart
            - verify-vendored-code
            - test-unit
            - test-api-compliance
            - build
            - test-generate-pcf-tile
            - test-service-lifecycles
            - publish-rc-images
  release:
    jobs:
      - generate-pcf-tile:
          <<: *base-release-step
      - publish-release-images:
          <<: *base-release-step
      - publish-release-chart:
          <<: *base-release-step
          requires:
            - publish-release-images
